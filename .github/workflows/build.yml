name: Build Documentation

on:
  workflow_dispatch:
  # push:  # Раскомментируйте при необходимости

permissions:
  contents: write

jobs:
  documentation:
    runs-on: ubuntu-latest
    steps:
      # Шаг 1: Клонирование репозитория с подмодулями
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          submodule-default: 'main'
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # Шаг 2: Принудительное обновление подмодуля
      - name: Update and checkout gf-data-rus submodule
        run: |
          # Инициализация и обновление всех подмодулей
          git submodule update --init --recursive --remote --force
    
          # Переход в директорию подмодуля (если она существует)
          if [ -d "unpack/gf-data-rus" ]; then
            cd unpack/gf-data-rus
            git checkout main
            git pull origin main
            cd ../..
          else
            echo "Error: Submodule directory 'unpack/gf-data-rus' not found!"
            ls -la unpack/  # Покажем содержимое unpack для диагностики
            exit 1
          fi
    
          # Проверка содержимого
          ls -la unpack/gf-data-rus/

      # Шаг 3: Освобождение места на диске
      - name: Log Disk Space
        run: df -h
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          large-packages: false
          swap-storage: false

      # Шаг 4: Установка зависимостей
      - name: Install Dependencies
        run: |
          sudo apt install ffmpeg pngquant imagemagick libfuse2
          wget https://github.com/vgmstream/vgmstream-releases/releases/download/nightly/vgmstream-linux-cli.tar.gz
          tar -zxf vgmstream-linux-cli.tar.gz
          mkdir bin
          mv vgmstream-cli bin
          wget https://imagemagick.org/archive/binaries/magick
          mv magick bin
          chmod a+x bin/*
          echo "${PWD}/bin" >> $GITHUB_PATH

      # Шаг 5: Восстановление кэша ресурсов
      - name: Restore Cached Resources
        id: restore-gf-downloader-resources
        uses: actions/cache/restore@v4
        with:
          path: |
            unpack/downloader/output
          key: gf-downloader-resources

      # Шаг 6: Настройка Python окружения
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
      - name: Setup Python Environment
        run: |
          cd unpack
          pdm install
          source .venv/bin/activate
          pip install -r downloader/requirements.txt

      # Шаг 7: Загрузка ресурсов с использованием данных из подмодуля
      - name: Download Resources
        run: |
          cd unpack
          source .venv/bin/activate
          mkdir -p downloader/resdata
          cp gf-data-rus/resdata_no_hash.json downloader/resdata/us_resdata.json
          cd downloader
          sed -i 's/"ch"/"us"/' config.json5
          git apply ../downloader.patch
          zip -j resdata.zip resdata/us_resdata.json
          python downloader.py --downloadres 0 --abname

      # Шаг 8: Кэширование загруженных ресурсов
      - name: Cache Downloaded Resources
        uses: actions/cache/save@v4
        with:
          path: |
            unpack/downloader/output
          key: ${{ steps.restore-gf-downloader-resources.outputs.cache-primary-key }}

      # Шаг 9: Работа с изображениями
      - name: Restore Cached Resources (images)
        id: restore-image-resources
        uses: actions/cache/restore@v4
        with:
          path: |
            unpack/images
          key: gf-image-resources
      - name: Unpack images
        run: |
          cd unpack
          cp -r fixed-data/* gf-data-rus
          source .venv/bin/activate
          python tests/test_backgrounds.py
          python tests/test_characters.py
      - name: Cache Resources (images)
        uses: actions/cache/save@v4
        with:
          path: |
            unpack/images
          key: ${{ steps.restore-image-resources.outputs.cache-primary-key }}

      # Шаг 10: Работа с аудио
      - name: Restore Cached Resources (audio)
        id: restore-audio-resources
        uses: actions/cache/restore@v4
        with:
          path: |
            unpack/audio
          key: gf-audio-resources
      - name: Unpack audio
        run: |
          cd unpack
          source .venv/bin/activate
          python tests/test_audio.py
      - name: Cache Resources (audio)
        uses: actions/cache/save@v4
        with:
          path: |
            unpack/audio
          key: ${{ steps.restore-audio-resources.outputs.cache-primary-key }}

      # Шаг 11: Распаковка ресурсов
      - name: Unpack resources
        run: |
          cd unpack
          source .venv/bin/activate
          python -m gfunpack downloader/output -o .

      # Шаг 12: Проверка места на диске
      - name: Log Disk Space
        run: df -h

      # Шаг 13: Подготовка ресурсов для сборки
      - name: Move Resources
        run: |
          cd unpack
          cp audio/audio.json images/backgrounds.json images/characters.json stories/stories.json stories/chapters.json ../src/assets
          mv audio ../public
          mv images ../public
          mv stories ../public

      # Шаг 14: Сборка проекта
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0
          run_install: false
      - name: Setup PNPM Workspace
        run: |
          pnpm install
      - name: Build Site
        run: |
          pnpm build-index
          pnpm build

      # Шаг 15: Публикация на Cloudflare Pages
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: dist
